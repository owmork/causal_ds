---
title: "Submission via GitHub Classroom"
filters:
  - lightbox
lightbox: auto
---

# Instructions

To submit your assignments, you will create your own Quarto[^1] journal that you upload to GitHub[^2]. GitHub is is a hosting platform for so called repositories, which typically consists of data and code.

[^1]: https://quarto.org/

[^2]: https://github.com/

You will write your solutions including your code in `.qmd` (Quarto) documents that can run and knit R code. You will publish these `.qmd` files using Quarto and GitHub to create your own password-protected website.

In the following I will guide your through the necessary steps.

::: callout-tip
## Don't worry!

Your solutions don't need to be completely free from errors but I should be able to recognize that you understand the core concepts and attempt to solve the assignments. Please make sure, that your code is running and generating output.
:::

# GitHub

1.  [Create a free GitHub account](https://github.com). If you already have a GitHub account, you can skip this step.

2.  [Download and install GitHub Desktop](https://desktop.github.com) and connect it to your account. GitHub Desktop is a graphical user interface, which allows you to sync your local code changes with your online repository.

3.  Check if `git` is installed on your system. It should already be the case but you can check it by opening `RStudio`, going to the terminal pane and entering `which git`. It should output the file path to `git` on your system. If you don't get the expected result, [download and install git](https://git-scm.com/downloads).

4.  [Accept the assignment.](https://classroom.github.com/a/x9U_PBSb) and follow through the steps to enter the virtual classroom. ![Accept the assignment.](/images/github_accept_assignment.png)

By the way, [this](https://tuhhstartupengineers.github.io/quarto_cds/) is what your journal is going to look like (without content). So let's get your journal running.

# Quarto

Quarto is a scientific publishing tool that allows R, Python, Julia and Observable JS users to create dynamic documents, websites, books and more. In fact, the whole course website is created using Quarto. In case you downloaded RStudio for this course, you do not need to install Quarto anymore. If you have an older RStudio version, you might have to download an install it or update to a new RStudio version.

# GitHub Desktop

Open GitHub Desktop and follow the steps depicted in the screenshots.

1.  Sign into your account.

![Sign in to your account (1/4).](/images/github_desktop/github_desktop_01_signin.png){group="github-desktop"} ![Sign in to your account (2/4).](/images/github_desktop/github_desktop_02_signin.png){group="github-desktop"}

![Sign in to your account (3/4).](/images/github_desktop/github_desktop_03_configure.png){group="github-desktop"} ![Sign in to your account (4/4).](/images/github_desktop/github_desktop_04_finish.png){group="github-desktop"}

2.  Now you have to clone your repository. Until now, your repository is online hosted on GitHub, but of course, you need a local version to add your solutions and code to your repository. Select `Clone Repository` and select your repo (should be `TUHHStartupEngineers-Classroom/cdsba-YourUserName`). Then select the local path, where you want your repo stored in your file system. 
!!! update

![Clone your repository.](/images/github_desktop/github_desktop_05_clone.png){group="github-desktop"}

# Publishing your journal

To publish your journal, you need to go into `Settings` on your journal repository. Note that your repository is located in your account on github.com and should have an address following the pattern: https://tuhhstartupengineers-classroom.github.io/cdsba-YourUserName/, where YourUserName is replaced by your name.

1.  Find `Pages` in the menu on the left and make sure the source **GitHub Action** is set.

![Set GitHub Action.](/images/github_publishing/github_pages_settings_01_action.png){group="github-publishing"}

2.  Now you are going to set a password in order to protect your journal. Select `Secrets and variables` and `Action` and click on the green field `New repository secret`.

![Set repository secret (1/2).](/images/github_publishing/github_pages_settings_02_secret_01.png){group="github-publishing"}

3.  The name has to be `WEBSITE_TOKEN`. The value for secret will be you password for your website that you will be later asked to submit to me, who will be able to see it in clear text. Regarding your password:

-   **DO NOT USE ONE OF YOUR STANDARD PASSWORDS**
-   **DO NOT USE SPACES OR QUOTATION MARKS WITHIN YOUR PASSWORD**

![Set repository secret (2/2).](/images/github_publishing/github_pages_settings_02_secret_02.png){group="github-publishing"}

Let's make the first edit to your repository. Later, you will add all your solutions and code but for now, let's just make a simple change.

1.  First, move to the local folder where you chose to save the repository. Open the `lab_journal.Rproj` file. This should automatically open RStudio, and your current working environment will be inside this project. That means everything you save will be auto saved to this folder (unless you tell RStudio to save something somewhere else. Have a look at the files tab in the bottom right hand corner. Most files you click will be opened up as text files in the RStudio editor. For each chapter there is a journal you should open and edit.

2.  Open a `.qmd` file in the *Content/01_journal* folder. Make a minor change and save the file. Then click on `Render`. That compiles your website. The website should be built. After the website is built, you should be able to see it in the RStudio browser (viewer pane in the bottom right corner). There is a little button that allows you to pop the website into your default web-browser. This way you can look at the website in your browser.

3.  Open GitHub Desktop (if it is not still open). You should see something similar to the image below. You can see what you changed in the `.qmd` and the accompanied `html` should be different as well.

![Commit](/images/github_desktop/github_desktop_06_commit.png){group="github-commit-push"}

4.  Now you still need to push your changes to GitHub. First, commit your changes at the left bottom by providing a short description of what you have changed and click on `Commit to Master`. Now you can push to origin (you might have to fetch changes beforehand).

![Push](/images/github_desktop/github_desktop_07_push.png){group="github-commit-push"}

# Check your website

Go onto your website. You find the URL under `Settings` -\> `Pages` and check if everything worked. Select `Remember Me` to avoid entering the password every time.

# Submission

```{=html}
<iframe src="https://docs.google.com/forms/d/e/1FAIpQLSfoGOtB5uO6CKtDbH6a6cq_0xP9eVYA56HTy6pjWCQ9mH-Ynw/viewform?embedded=true" width="640" height="1200" frameborder="0" marginheight="0" marginwidth="0">Wird geladenâ€¦</iframe>
```

Submit your journal URL and password via the following form. If you do not submit your information, we won\'t be able to evaluate your assignments.

::: callout-important
## Summary: How to successfully submit

1.  Write your solutions down in a `.qmd` file and render.
2.  Commit and push your changes to your GitHub
3.  Fill out the form.
:::
