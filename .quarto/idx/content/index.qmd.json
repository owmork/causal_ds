{"title":"Content","markdown":{"yaml":{"title":"Content"},"headingText":"Welcome!","containsRefs":false,"markdown":"\n\n\nWelcome to \"Causal Data Science for Business Analytics\"!\n\nIn this course, you will learn about causality in data science with a particular emphasis on business applications. Causal data science methods are increasingly recognized and developed to understand causes and effects. Moving beyond a prediction-based approach in data science, the purpose of causal methods is to understand underlying processes and mechanisms to guide strategic decision-making. Causal methods allow us to answer questions that otherwise could not be addressed.\n\nA large global survey[^1] conducted among data science practitioners in the industry in 2020 states the importance of causal data science. 83% of the respondents consider causal inference in data-driven decisions making increasingly important and 44% state that, in their data science project, causal inference already plays an important role. Additionally,\n\n[^1]: <https://www.causalscience.org/blog/causal-data-science-in-practice/>\n\n-   45% recognize the necessity to invest into causal inference in the future\n-   42% plan to intensify the training of their workforce in causal inference\n-   36% intend to hire talent in the field of causal inference\n\nWhile the primary goal of machine learning is typically the development of algorithms for a high prediction and classification accuracy, causal inference aims to understand and establish cause-and-effect relationships between variables.\n\nTypical applications in business therefore aim to answer questions like:\n\n-   Does a customer loyalty program actually bind customers? Or do only customers sign up that are loyal anyways?\n-   Does discount a product lead to more revenue? Or do only customers who would have bought anyways buy?\n\nMany successful companies have already recognized the advantages of causal data science. Click on the link to get more details how these companies are using tools from causal inference to generate value within their organizations.\n\n![Sample of companies involved in causal data science](/images/00_companies.png){fig-align=\"center\"}\n\n-   **Uber** provides a [Python package](https://github.com/uber/causalml) accompanied by a [white paper](https://ieeexplore.ieee.org/document/8964199) suited for use cases such as campaign targeting optimization (identify customers most likely to respond to ad) and personalized engagement (find optimal personalized recommendation systems).\n\n-   Lacking the possibility to measure the benefit of a new tool, **AirBnB** developed a method to mimic a randomized experiment called [Artificial Counterfactual Estimation (ACE)](https://diff.blog/post/artificial-counterfactual-estimation-ace-machine-learning-based-causal-inference-at-airbnb-89562/) leveraging causal inference and machine learning.\n\n-   Data scientists at **booking.com** make use of [encouragement design and instrumental variables](https://booking.ai/encouraged-to-comply-3cd95b447a20) to examine whether property partners can be reactivated by contacting.\n\n-   At **LinkedIn**, methods from causal inference are used to extract effect estimates from observational data as randomized experiments are often not feasible. Four case studies dealing with job postings, free trials, user contributions and marketing campaigns are presented [here](https://hdsr.mitpress.mit.edu/pub/wjhth9tr/release/3).\n\n-   **Netflix** often uses A/B testing but sometimes refrains from its use in order to provide the same value to all customers. Then data scientists need to [draw on observational data](https://netflixtechblog.com/a-survey-of-causal-inference-applications-at-netflix-b62d25175e6f) and e.g. use double machine learning to study the impact of localized content (through subtitles and dubs) or introduce causal inference into recommendation models to overcome the purely associative nature.\n\n-   **Google** provides an [R package](https://cran.r-project.org/web/packages/CausalImpact/index.html) to help [inferring causal impact](https://research.google/pubs/pub41854/) from marketing campaigns on e.g. web searches, product installs or sales.\n\n-   **Meta** runs experiments to improve the user experience and reduce resource usage. [Applying methods from causal inference and machine learning](https://engineering.fb.com/2022/10/31/ml-applications/instagram-notification-management-machine-learning/), Instagram users are provided with better notifications.\n\n-   **Microsoft** brings together state-of-the-art machine learning techniques and statistics to tackle causal inference problems in its [open source ecosystem for causal machine learning](https://www.pywhy.org/).\n\n-   **Zalando** puts a focus on [experimentation and A/B-testing](https://engineering.zalando.com/posts/2021/01/experimentation-platform-part1.html) in their business decision-making.\n\n-   Data science teams at **Lyft** rely on [large causal models](https://eng.lyft.com/causal-forecasting-at-lyft-part-1-14cca6ff3d6d) to model customer decisions and driver incentives in order to manage their marketplace.\n\n-   !!! Other:\n\n    -   https://causal-machine-learning.github.io/kdd2021-tutorial/\n\n    -   https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3867326\n\n# Setup\n\n## Mattermost\n\nIn the course of the next chapters, we will do a lot of coding and errors will occur all the time. That is nothing you should be afraid of and in fact, dealing with errors is an elementary component in programming in data science.\n\nIn most cases, other people from around the world have had similar problems and you will find the right solution to your problem by just googling it. Two great resources to help you are [StackOverflow](https://stackoverflow.com/) and [RStudio Community](https://community.rstudio.com/). Please try to do that as a first step when you run into an error.\n\nIf you have any questions about the class content, coding problems and other challenges, please use our Mattermost channel, so that everyone can benefit from the discussions. Please help each other, try to answer emerging questions and actively engage in the channel. Questions, that are not directly related to the class content, can be sent to me.\n\nFollow these steps to join the channel:\n\n1.  Go on <https://communicating.tuhh.de/>\n2.  Click **Click here to sign in**\n3.  Click the Button **GitLab**\n4.  *You may need to login to GitLab with your Kerberos/LDAP data (e.g. cba1020 and your password) on the following page and/or authorize once for Mattermost to access GitLab. You may also need to accept the terms.*\n5.  After accessing Mattermost, join the [team W-11 students](https://communicating.tuhh.de/signup_user_complete/?id=8f44fef8tifj5rripq8zya4s7w)\n6.  Join [Causal Data Science Channel](https://communicating.tuhh.de/w-11-students/channels/discussion) (you might need to wait a bit, as I first have to add you)\n\nThere, and in the sessions, I will try to help you as much as possible.\n\nIn order to keep the discussion efficient and manageable it is necessary that we all follow some basic rules:\n\n-   Post error message: if you run into an error it is necessary that I know what the error is. Often reading the error message very carefully can also help you to understand where the problem comes from.\n-   Post the code that caused the error: in order to reproduce the error I need the last command that caused the error. If we need more context we will ask you for that.\n-   Use the formatting guidelines of Mattermost when you post code. That makes a huge difference in terms of readability. They will also be linked in the channel description. Most important is that using \\`\\`\\` one line above and one line below your code will make it easy to read.\n-   Use thread function to reply to a discussion. This way a discussion can be easier read. You find the reply button on the right side of a message.\n\nPlaying by these rules makes it a lot easier for everyone to follow the discussion and learn from similar problems and everyone can benefit from the discussions.\n\nSee in this minimalistic example how little formatting makes your code and error easy to read.\n\n<!-- CODE (show) -->\n\n````{=html}\n<pre><code class=\"r\"> \n```r\nx %>% sum()\n```\n\n**Error:**\nError in x %>% sum() : could not find function \"%>%\"\n</code></pre>\n````\n\n![How to format your code and error when you ask for help.](/images/00_mattermost.png){width=\"400\"}\n\n## Installing R & RStudio IDE\n\nBefore we dive deep into the methods that help us to make critical data-driven business decisions, we start with a **brief introduction to R**, the programming language most suited to solve problems of causality. Don't worry, if you have never heard of it! We'll go through some very concise courses that will familiarize you with its functions very quickly. Essentially, you have to tell R what to do for you in a specific language. But step by step, first, we have to do the installation.\n\nR is only fun to use in combination with RStudio, a graphical integrated development environment (IDE) that makes the use of R more convenient and interactive. Please follow the steps as outlined in the [instructions](https://rstudio-education.github.io/hopr/starting.html) (note, that you have to install both R and RStudio):\n\nWhen you have successfully installed R and RStudio, open RStudio and you should see a screen similar to this one. By the way, if you want to change the default withe theme to something else, you can do that by going to `Tools` -\\> `Global options` -\\> `Appearance` and switch theme in -\\> `Editor theme`.\n\n![](/images/00_rstudio.png)\\\nRStudio is split into four panes that have the following functions:\n\n[**Source Editor**]{style=\"background-color: #4BE806\"}: here, you open, edit and execute programs/scripts that you have written. Code is not run immediately. If you want to run the current line of code, you just press `Run` or `Ctrl`+`Enter/CMD`+`Return`. You can also run several lines of code by highlighting them. Please note that every line starting with `#` will not be run. The use of `#` is to write comments and annotations in your code that won't be executed.\n\n[**Console**]{style=\"background-color: #E02809\"}: here, you can enter commands directly and run code. Just type in your code and press Enter.\n\n[**Environment**]{style=\"background-color: #2738E4\"}: here, you can see what objects (dataframes, arrays, values, functions) you have in your workspace/environment. \n\n[**Miscellaneous**]{style=\"background-color: #9F7443\"}: here, you have for example a file manager, an overview of installed and loaded packages, a plot viewer and a help tab.\n\n## Introduction to R\n\nBefore you begin coding, it's important to remember this final point: do not let the errors, warnings, and other messages that you, like everyone else, are bound to encounter intimidate you. There is no reason to panic just because you see red text in your console and in fact, what is returned will often times already help you to solve the problem and lead you onto the right track.\n\nThere are [three different types]{.underline} of texts that communicate issues or information about the code execution:\n\n-   **Errors**: this is a legitimate error and most likely your code did not run due to the error. Many of the error messages are very concise and you will directly see what was wrong, what is missing etc. If you do not see what you did wrong at first glance, you can copy the error message and google it. It is very likely someone else has run into the same error before.\n\n-   **Warnings**: opposed to an error, your code did probably run but there could be something off. However, it is just a warning. You can check it and if you think the warning does not apply to your specific scenario, you can go on.\n\n-   **Messages**: these are just friendly texts that provide you with useful information. They do not need immediate attention but can provide useful supplementary information.\n\n[**Interactive Tutorials**]{.underline}**:**\n\nBut let's no more talk about it but instead start coding because the best way to get familiar with R and to code is to just start.\n\nIn the following chapters, you will learn to code along the way, but to start you will go through some very concise tutorials from the R package `swirl`. The package provides a [whole bunch of tutorials](http://swirlstats.com/scn/title.html) in the console.\n\nFeel free to complete as many tutorials as you want, but for this class, the following tutorial is of particular use: **The R Programming Environment** (Chapter 2-12)\n\n`swirl()`does not come with R by default but is an optional package. **R packages** are extensions of the base functionality implemented by default when you download R. Written by users around the world, packages provide additional features and are crucial for data science tasks in practice as you will later see.\n\nYou need to follow two steps to use an R package:\n\n1.  **Once: install the package**. As already mentioned, packages are not installed by default and you have to download it and add it to your library. Once you've installed it, you don't have to repeat this step.\n\n2.  **Always: load the package**. By default, just the base R functionality is loaded and when you want to make use of the additional features provided by a specific package, you have to load it every time you start RStudio.\n\nSo let's do it for the package `swirl`:\n\nFirst, we install the package. This has to be done only once. You can either choose to write your code into the source editor or directly into the console\n\n```{r}\n#| eval: false\n\ninstall.packages(\"swirl\")\n```\n\nThen, we load the library into our current our R session.\n\n```{r}\n#| eval: false\n\nlibrary(swirl)\n```\n\nNow, the package is loaded and we can start making use of it.\n\n```{r}\n#| eval: false\n\ninstall_course(\"The R Programming Environment\")\n```\n\nYou just have to type `swirl()` into your console and follow the instructions! Please make sure to always use the same name. This way, you can leave the tutorial and start at the same position again later. It's best to write it down so that you do not forget it.\n\n```{r}\n#| eval: false\n\nswirl()\n```\n\nSelect the course you just installed: `The R Programming Environment` and start with Chapter 2. You should skip Chapter 1 because its irrelevant for you. If you accidentally selected Chapter 1, just quickly go through it and choose `No` at the last question.\n\nswirl will ask you to install packages for you that are needed for the tutorial. Please confirm when asked. If you computer is struggling with installing a package named \"vctrs\", please type in the following command. If you don't get such an error, you can ignore it.\n\n```{r}\n#| eval: false\n\ninstall.packages(\"vctrs\", repos = \"https://packagemanager.rstudio.com/cran/latest\")\n```\n\nIf, at some point, you want to take a break, you can leave the `swirl` course by typing `bye()` or the `Esc` key. You can return to the course by typing `swirl()` and hitting `Enter`. And remember, to use the same name you used the first time.\n\nYou don't need to submit anything from this step. Just focus on getting familiar with `R` by completing the tutorial (I recommend to solve chapter 2-12)!\n\n::: callout-note\nWhenever you want to find out more about a command or you have difficulties understanding what it does, you can click on it and a help page will show up.\n:::\n\n# Assignments\n\nAt the end of each chapter (the following chapters of **Fundamentals** and **Toolbox**, not the `swirl` tutorials), you will find an assignment. These assignments are related to the same chapter and with your acquired knowledge, you should be able to solve it.\n\nYou have to **submit your solutions to the assignments by 31/12/2023** in order to pass the course. You can find more detailed information on how to submit under the tab [Submission](https://owmork.github.io/causal_ds/submission/submission.html). To successfully complete the course, you also have to **register on TUNE**.\n\n# References\n\nMost of the resources I used to create this course are free. Feel free to have a look at them when you are stuck on a problem or when you are interested in learning more about a particular topic.\n\n-   Scott Cunningham, *Causal Inference: The Mixtape*, https://mixtape.scunning.com/\n-   Nick Huntington-Klein, *The Effect: An Introduction to Research Design and Causality*, https://theeffectbook.net/\n-   Matheus Facure, *Causal Inference for the Brave and True*, https://matheusfacure.github.io/python-causality-handbook\n-   Pearl J. Glymour M. & Jewell N. P. (2016). *Causal inference in statistics : a primer*. Wiley.\n\n# Good luck!\n\nNow, you can start browsing the class content. In total, there are ten chapters, starting with **fundamental** knowledge necessary to understand what is waiting for us in the **toolbox**, that equips you with methods specifically designed to estimate causal effects in experimental and observational data.\n\nHave fun!\n","srcMarkdownNoYaml":"\n\n# Welcome!\n\nWelcome to \"Causal Data Science for Business Analytics\"!\n\nIn this course, you will learn about causality in data science with a particular emphasis on business applications. Causal data science methods are increasingly recognized and developed to understand causes and effects. Moving beyond a prediction-based approach in data science, the purpose of causal methods is to understand underlying processes and mechanisms to guide strategic decision-making. Causal methods allow us to answer questions that otherwise could not be addressed.\n\nA large global survey[^1] conducted among data science practitioners in the industry in 2020 states the importance of causal data science. 83% of the respondents consider causal inference in data-driven decisions making increasingly important and 44% state that, in their data science project, causal inference already plays an important role. Additionally,\n\n[^1]: <https://www.causalscience.org/blog/causal-data-science-in-practice/>\n\n-   45% recognize the necessity to invest into causal inference in the future\n-   42% plan to intensify the training of their workforce in causal inference\n-   36% intend to hire talent in the field of causal inference\n\nWhile the primary goal of machine learning is typically the development of algorithms for a high prediction and classification accuracy, causal inference aims to understand and establish cause-and-effect relationships between variables.\n\nTypical applications in business therefore aim to answer questions like:\n\n-   Does a customer loyalty program actually bind customers? Or do only customers sign up that are loyal anyways?\n-   Does discount a product lead to more revenue? Or do only customers who would have bought anyways buy?\n\nMany successful companies have already recognized the advantages of causal data science. Click on the link to get more details how these companies are using tools from causal inference to generate value within their organizations.\n\n![Sample of companies involved in causal data science](/images/00_companies.png){fig-align=\"center\"}\n\n-   **Uber** provides a [Python package](https://github.com/uber/causalml) accompanied by a [white paper](https://ieeexplore.ieee.org/document/8964199) suited for use cases such as campaign targeting optimization (identify customers most likely to respond to ad) and personalized engagement (find optimal personalized recommendation systems).\n\n-   Lacking the possibility to measure the benefit of a new tool, **AirBnB** developed a method to mimic a randomized experiment called [Artificial Counterfactual Estimation (ACE)](https://diff.blog/post/artificial-counterfactual-estimation-ace-machine-learning-based-causal-inference-at-airbnb-89562/) leveraging causal inference and machine learning.\n\n-   Data scientists at **booking.com** make use of [encouragement design and instrumental variables](https://booking.ai/encouraged-to-comply-3cd95b447a20) to examine whether property partners can be reactivated by contacting.\n\n-   At **LinkedIn**, methods from causal inference are used to extract effect estimates from observational data as randomized experiments are often not feasible. Four case studies dealing with job postings, free trials, user contributions and marketing campaigns are presented [here](https://hdsr.mitpress.mit.edu/pub/wjhth9tr/release/3).\n\n-   **Netflix** often uses A/B testing but sometimes refrains from its use in order to provide the same value to all customers. Then data scientists need to [draw on observational data](https://netflixtechblog.com/a-survey-of-causal-inference-applications-at-netflix-b62d25175e6f) and e.g. use double machine learning to study the impact of localized content (through subtitles and dubs) or introduce causal inference into recommendation models to overcome the purely associative nature.\n\n-   **Google** provides an [R package](https://cran.r-project.org/web/packages/CausalImpact/index.html) to help [inferring causal impact](https://research.google/pubs/pub41854/) from marketing campaigns on e.g. web searches, product installs or sales.\n\n-   **Meta** runs experiments to improve the user experience and reduce resource usage. [Applying methods from causal inference and machine learning](https://engineering.fb.com/2022/10/31/ml-applications/instagram-notification-management-machine-learning/), Instagram users are provided with better notifications.\n\n-   **Microsoft** brings together state-of-the-art machine learning techniques and statistics to tackle causal inference problems in its [open source ecosystem for causal machine learning](https://www.pywhy.org/).\n\n-   **Zalando** puts a focus on [experimentation and A/B-testing](https://engineering.zalando.com/posts/2021/01/experimentation-platform-part1.html) in their business decision-making.\n\n-   Data science teams at **Lyft** rely on [large causal models](https://eng.lyft.com/causal-forecasting-at-lyft-part-1-14cca6ff3d6d) to model customer decisions and driver incentives in order to manage their marketplace.\n\n-   !!! Other:\n\n    -   https://causal-machine-learning.github.io/kdd2021-tutorial/\n\n    -   https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3867326\n\n# Setup\n\n## Mattermost\n\nIn the course of the next chapters, we will do a lot of coding and errors will occur all the time. That is nothing you should be afraid of and in fact, dealing with errors is an elementary component in programming in data science.\n\nIn most cases, other people from around the world have had similar problems and you will find the right solution to your problem by just googling it. Two great resources to help you are [StackOverflow](https://stackoverflow.com/) and [RStudio Community](https://community.rstudio.com/). Please try to do that as a first step when you run into an error.\n\nIf you have any questions about the class content, coding problems and other challenges, please use our Mattermost channel, so that everyone can benefit from the discussions. Please help each other, try to answer emerging questions and actively engage in the channel. Questions, that are not directly related to the class content, can be sent to me.\n\nFollow these steps to join the channel:\n\n1.  Go on <https://communicating.tuhh.de/>\n2.  Click **Click here to sign in**\n3.  Click the Button **GitLab**\n4.  *You may need to login to GitLab with your Kerberos/LDAP data (e.g. cba1020 and your password) on the following page and/or authorize once for Mattermost to access GitLab. You may also need to accept the terms.*\n5.  After accessing Mattermost, join the [team W-11 students](https://communicating.tuhh.de/signup_user_complete/?id=8f44fef8tifj5rripq8zya4s7w)\n6.  Join [Causal Data Science Channel](https://communicating.tuhh.de/w-11-students/channels/discussion) (you might need to wait a bit, as I first have to add you)\n\nThere, and in the sessions, I will try to help you as much as possible.\n\nIn order to keep the discussion efficient and manageable it is necessary that we all follow some basic rules:\n\n-   Post error message: if you run into an error it is necessary that I know what the error is. Often reading the error message very carefully can also help you to understand where the problem comes from.\n-   Post the code that caused the error: in order to reproduce the error I need the last command that caused the error. If we need more context we will ask you for that.\n-   Use the formatting guidelines of Mattermost when you post code. That makes a huge difference in terms of readability. They will also be linked in the channel description. Most important is that using \\`\\`\\` one line above and one line below your code will make it easy to read.\n-   Use thread function to reply to a discussion. This way a discussion can be easier read. You find the reply button on the right side of a message.\n\nPlaying by these rules makes it a lot easier for everyone to follow the discussion and learn from similar problems and everyone can benefit from the discussions.\n\nSee in this minimalistic example how little formatting makes your code and error easy to read.\n\n<!-- CODE (show) -->\n\n````{=html}\n<pre><code class=\"r\"> \n```r\nx %>% sum()\n```\n\n**Error:**\nError in x %>% sum() : could not find function \"%>%\"\n</code></pre>\n````\n\n![How to format your code and error when you ask for help.](/images/00_mattermost.png){width=\"400\"}\n\n## Installing R & RStudio IDE\n\nBefore we dive deep into the methods that help us to make critical data-driven business decisions, we start with a **brief introduction to R**, the programming language most suited to solve problems of causality. Don't worry, if you have never heard of it! We'll go through some very concise courses that will familiarize you with its functions very quickly. Essentially, you have to tell R what to do for you in a specific language. But step by step, first, we have to do the installation.\n\nR is only fun to use in combination with RStudio, a graphical integrated development environment (IDE) that makes the use of R more convenient and interactive. Please follow the steps as outlined in the [instructions](https://rstudio-education.github.io/hopr/starting.html) (note, that you have to install both R and RStudio):\n\nWhen you have successfully installed R and RStudio, open RStudio and you should see a screen similar to this one. By the way, if you want to change the default withe theme to something else, you can do that by going to `Tools` -\\> `Global options` -\\> `Appearance` and switch theme in -\\> `Editor theme`.\n\n![](/images/00_rstudio.png)\\\nRStudio is split into four panes that have the following functions:\n\n[**Source Editor**]{style=\"background-color: #4BE806\"}: here, you open, edit and execute programs/scripts that you have written. Code is not run immediately. If you want to run the current line of code, you just press `Run` or `Ctrl`+`Enter/CMD`+`Return`. You can also run several lines of code by highlighting them. Please note that every line starting with `#` will not be run. The use of `#` is to write comments and annotations in your code that won't be executed.\n\n[**Console**]{style=\"background-color: #E02809\"}: here, you can enter commands directly and run code. Just type in your code and press Enter.\n\n[**Environment**]{style=\"background-color: #2738E4\"}: here, you can see what objects (dataframes, arrays, values, functions) you have in your workspace/environment. \n\n[**Miscellaneous**]{style=\"background-color: #9F7443\"}: here, you have for example a file manager, an overview of installed and loaded packages, a plot viewer and a help tab.\n\n## Introduction to R\n\nBefore you begin coding, it's important to remember this final point: do not let the errors, warnings, and other messages that you, like everyone else, are bound to encounter intimidate you. There is no reason to panic just because you see red text in your console and in fact, what is returned will often times already help you to solve the problem and lead you onto the right track.\n\nThere are [three different types]{.underline} of texts that communicate issues or information about the code execution:\n\n-   **Errors**: this is a legitimate error and most likely your code did not run due to the error. Many of the error messages are very concise and you will directly see what was wrong, what is missing etc. If you do not see what you did wrong at first glance, you can copy the error message and google it. It is very likely someone else has run into the same error before.\n\n-   **Warnings**: opposed to an error, your code did probably run but there could be something off. However, it is just a warning. You can check it and if you think the warning does not apply to your specific scenario, you can go on.\n\n-   **Messages**: these are just friendly texts that provide you with useful information. They do not need immediate attention but can provide useful supplementary information.\n\n[**Interactive Tutorials**]{.underline}**:**\n\nBut let's no more talk about it but instead start coding because the best way to get familiar with R and to code is to just start.\n\nIn the following chapters, you will learn to code along the way, but to start you will go through some very concise tutorials from the R package `swirl`. The package provides a [whole bunch of tutorials](http://swirlstats.com/scn/title.html) in the console.\n\nFeel free to complete as many tutorials as you want, but for this class, the following tutorial is of particular use: **The R Programming Environment** (Chapter 2-12)\n\n`swirl()`does not come with R by default but is an optional package. **R packages** are extensions of the base functionality implemented by default when you download R. Written by users around the world, packages provide additional features and are crucial for data science tasks in practice as you will later see.\n\nYou need to follow two steps to use an R package:\n\n1.  **Once: install the package**. As already mentioned, packages are not installed by default and you have to download it and add it to your library. Once you've installed it, you don't have to repeat this step.\n\n2.  **Always: load the package**. By default, just the base R functionality is loaded and when you want to make use of the additional features provided by a specific package, you have to load it every time you start RStudio.\n\nSo let's do it for the package `swirl`:\n\nFirst, we install the package. This has to be done only once. You can either choose to write your code into the source editor or directly into the console\n\n```{r}\n#| eval: false\n\ninstall.packages(\"swirl\")\n```\n\nThen, we load the library into our current our R session.\n\n```{r}\n#| eval: false\n\nlibrary(swirl)\n```\n\nNow, the package is loaded and we can start making use of it.\n\n```{r}\n#| eval: false\n\ninstall_course(\"The R Programming Environment\")\n```\n\nYou just have to type `swirl()` into your console and follow the instructions! Please make sure to always use the same name. This way, you can leave the tutorial and start at the same position again later. It's best to write it down so that you do not forget it.\n\n```{r}\n#| eval: false\n\nswirl()\n```\n\nSelect the course you just installed: `The R Programming Environment` and start with Chapter 2. You should skip Chapter 1 because its irrelevant for you. If you accidentally selected Chapter 1, just quickly go through it and choose `No` at the last question.\n\nswirl will ask you to install packages for you that are needed for the tutorial. Please confirm when asked. If you computer is struggling with installing a package named \"vctrs\", please type in the following command. If you don't get such an error, you can ignore it.\n\n```{r}\n#| eval: false\n\ninstall.packages(\"vctrs\", repos = \"https://packagemanager.rstudio.com/cran/latest\")\n```\n\nIf, at some point, you want to take a break, you can leave the `swirl` course by typing `bye()` or the `Esc` key. You can return to the course by typing `swirl()` and hitting `Enter`. And remember, to use the same name you used the first time.\n\nYou don't need to submit anything from this step. Just focus on getting familiar with `R` by completing the tutorial (I recommend to solve chapter 2-12)!\n\n::: callout-note\nWhenever you want to find out more about a command or you have difficulties understanding what it does, you can click on it and a help page will show up.\n:::\n\n# Assignments\n\nAt the end of each chapter (the following chapters of **Fundamentals** and **Toolbox**, not the `swirl` tutorials), you will find an assignment. These assignments are related to the same chapter and with your acquired knowledge, you should be able to solve it.\n\nYou have to **submit your solutions to the assignments by 31/12/2023** in order to pass the course. You can find more detailed information on how to submit under the tab [Submission](https://owmork.github.io/causal_ds/submission/submission.html). To successfully complete the course, you also have to **register on TUNE**.\n\n# References\n\nMost of the resources I used to create this course are free. Feel free to have a look at them when you are stuck on a problem or when you are interested in learning more about a particular topic.\n\n-   Scott Cunningham, *Causal Inference: The Mixtape*, https://mixtape.scunning.com/\n-   Nick Huntington-Klein, *The Effect: An Introduction to Research Design and Causality*, https://theeffectbook.net/\n-   Matheus Facure, *Causal Inference for the Brave and True*, https://matheusfacure.github.io/python-causality-handbook\n-   Pearl J. Glymour M. & Jewell N. P. (2016). *Causal inference in statistics : a primer*. Wiley.\n\n# Good luck!\n\nNow, you can start browsing the class content. In total, there are ten chapters, starting with **fundamental** knowledge necessary to understand what is waiting for us in the **toolbox**, that equips you with methods specifically designed to estimate causal effects in experimental and observational data.\n\nHave fun!\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["lightbox"],"css":["../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","lightbox":{"match":"auto"},"editor":"visual","theme":["darkly","../theme-darkly.scss"],"mainfont":"arial","linestretch":1.7,"title":"Content"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}