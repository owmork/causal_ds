# set theme
ggthemr::ggthemr(cds_theme, type = "outer")
# source custom DAG theme
source("../../code/dag_theme.R")
#| echo: false
# Scatter plot of x and y with random lines
ggplot(lm_dat, aes(x = x, y = y)) +
geom_point(alpha = .8, size = 3) +
# LM line
geom_line(stat = "smooth",
method='lm',
formula= y~x,
alpha = .9,
se = F,
size = 3) +
# Random lines
geom_line(data = rlines[[1]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[2]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[3]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[4]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[5]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[6]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[7]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[8]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[9]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[10]], color = line_color, alpha = .5, linewidth = 1) +
theme()
knitr::opts_chunk$set(fig.width = 6, fig.asp = 0.618, fig.align = "center", fig.retina = 3, out.width = "75%")
set.seed(11)
options("digits" = 2, "width" = 150)
options(dplyr.summarise.inform = FALSE)
# custom ggplot theme
# colors from TUHH brand identitiy
tuhh_colors <- c("#D0D0CE", "#00C1D4", "#FF4F4F", "#5AFFC5",
"#FFDE36", "#143BFF", "#FF7E15", "#FFAEA2")
# initialise theme
cds_theme <- ggthemr::define_palette(
swatch = tuhh_colors,
gradient = c(lower = "#FFAEA2", upper = "#00C1D4"),
#background = "#1C1C1C",
background = "#011627",
line = c("#FFFFFF", "#FFFFFF"),
text = c("#FFFFFF", "#FFFFFF"),
gridline = c(alpha("#D0D0CE", 0.2), alpha("#D0D0CE", 0.4))
#gridline = c("#D0D0CE", "#D0D0CE")
)
# set theme
ggthemr::ggthemr(cds_theme, type = "outer")
# source custom DAG theme
source("../../code/dag_theme.R")
#| echo: false
# Scatter plot of x and y with random lines
ggplot(lm_dat, aes(x = x, y = y)) +
geom_point(alpha = .8, size = 3) +
# LM line
geom_line(stat = "smooth",
method='lm',
formula= y~x,
alpha = .9,
se = F,
size = 3) +
# Random lines
geom_line(data = rlines[[1]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[2]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[3]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[4]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[5]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[6]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[7]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[8]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[9]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[10]], color = line_color, alpha = .5, linewidth = 1)
#| echo: false
# Scatter plot of x and y with random lines
ggplot(lm_dat, aes(x = x, y = y)) +
geom_point(size = 3) +
# LM line
geom_line(stat = "smooth",
method='lm',
formula= y~x,
alpha = .9,
se = F,
size = 3) +
# Random lines
geom_line(data = rlines[[1]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[2]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[3]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[4]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[5]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[6]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[7]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[8]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[9]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[10]], color = line_color, alpha = .5, linewidth = 1)
#| echo: false
# Function to create a random line
rline <- function(){
tibble(x = c(min(lm_dat$x), max(lm_dat$x)),
y = c(runif(1, -0.3, 0.3) + min(lm_dat$y),
runif(1, -0.3, 0.3) + max(lm_dat$y)))
}
# Create 10 random lines
rlines <- map(1:10, ~random_line())
# Change line color
line_color <- ggthemr::swatch()[1]
# Scatter plot of x and y with random lines
ggplot(lm_dat, aes(x = x, y = y)) +
geom_point(size = 3) +
# LM line
geom_line(stat = "smooth",
method='lm',
formula= y~x,
alpha = .5,
se = F,
color = line_color,
size = 1) +
# Random lines
geom_line(data = rlines[[1]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[2]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[3]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[4]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[5]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[6]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[7]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[8]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[9]], color = line_color, alpha = .5, linewidth = 1) +
geom_line(data = rlines[[10]], color = line_color, alpha = .5, linewidth = 1)
knitr::opts_chunk$set(fig.width = 6, fig.asp = 0.618, fig.align = "center", fig.retina = 3, out.width = "75%")
set.seed(11)
options("digits" = 2, "width" = 150)
options(dplyr.summarise.inform = FALSE)
# custom ggplot theme
# colors from TUHH brand identitiy
tuhh_colors <- c("#D0D0CE", "#00C1D4", "#FF4F4F", "#5AFFC5",
"#FFDE36", "#143BFF", "#FF7E15", "#FFAEA2")
# initialise theme
cds_theme <- ggthemr::define_palette(
swatch = tuhh_colors,
gradient = c(lower = "#FFAEA2", upper = "#00C1D4"),
#background = "#1C1C1C",
background = "#011627",
line = c("#FFFFFF", "#FFFFFF"),
text = c("#FFFFFF", "#FFFFFF"),
gridline = c(alpha("#D0D0CE", 0.2), alpha("#D0D0CE", 0.4)),
panel.border = element_rect(colour = "black", fill=NA, size=5)
)
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.6),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.7)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.5))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))
app_usage
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.25),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))
colSums(app_usage)
app_usage
colSums(app_usage[, 2:4])
colSums(app_usage[, c("smartphone", "tablet", "computer")])
app_usage %>% select(smartphone, tablet, computer) %>% colSums()
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey"))
tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.25),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.25),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.25),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 1),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))
head(app_usage, 10)
colSums(app_usage)
smartphone
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))
app_usage
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
mutate(smartphone = if(sum(smartphone, tablet, computer) == 0, 1))
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
mutate(smartphone = if_else(sum(smartphone, tablet, computer) == 0, 1, smartphone))
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
rowwise() %>%
mutate(smartphone = if_else(sum(smartphone, tablet, computer) == 0, 1, smartphone))
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
rowwise() %>%
mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))
app_usage
head(app_usage, 10)
colSums(app_usage)
colSums(app_usage[, 2:4])
colSums(app_usage[, c("smartphone", "tablet", "computer")])
app_usage %>% select(smartphone, tablet, computer) %>% colSums()
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey"))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .2))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .3))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .25))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .23))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .225))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .221))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .24))
knitr::opts_chunk$set(fig.width = 6, fig.asp = 0.618, fig.align = "center", fig.retina = 3, out.width = "75%")
set.seed(11)
options("digits" = 2, "width" = 150)
options(dplyr.summarise.inform = FALSE)
# custom ggplot theme
# colors from TUHH brand identitiy
tuhh_colors <- c("#D0D0CE", "#00C1D4", "#FF4F4F", "#5AFFC5",
"#FFDE36", "#143BFF", "#FF7E15", "#FFAEA2")
# initialise theme
cds_theme <- ggthemr::define_palette(
swatch = tuhh_colors,
gradient = c(lower = "#FFAEA2", upper = "#00C1D4"),
background = "#0F2231",
line = c("#FFFFFF", "#FFFFFF"),
text = c("#FFFFFF", "#FFFFFF"),
gridline = c(ggplot2::alpha("#D0D0CE", 0.2),
ggplot2::alpha("#D0D0CE", 0.4))
)
# set theme
ggthemr::ggthemr(cds_theme, type = "outer")
# source custom DAG theme
source("../../code/dag_theme.R")
# Load tidyverse package
library(tidyverse)
# Nmber of obervations
n <- 1000
# Create tibble
app_usage <- tibble(
# Create user_id in increasing order
user_id = 1:n,
# Randomly sample if smartphone was used
smartphone = rbinom(n, 1, 0.4),
# Sample if tablet was used. More likely if smartphone was not used.
tablet = ifelse(smartphone == 1, rbinom(n, 1, 0.2), rbinom(n, 1, 0.5)),
# Sample if computer was used. More likely if tablet was not used.
computer = ifelse(tablet == 1, rbinom(n, 1, 0.1), rbinom(n, 1, 0.3))
)
# If no device has value of 1, we set smartphone to 1
app_usage <- app_usage %>%
rowwise() %>%
mutate(smartphone = ifelse(sum(smartphone, tablet, computer) == 0, 1, smartphone))
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer")) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .24))
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer"))
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer"), set_color = "black")
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer"), label_percent_digit = 2)
set_phon <- which(app_usage$smartphone == 1)
set_tabl <- which(app_usage$tablet == 1)
set_comp <- which(app_usage$computer == 1)
sets_all <- list(set_phon, set_tabl, set_comp)
library(ggVennDiagram)
ggVennDiagram(sets_all, category.names = c("Smartphone", "Tablet", "Computer"),
label_percent_digit = 2) +
theme(legend.position = "none",
panel.background = element_rect("grey"),
strip.background = element_rect("grey")) +
scale_x_continuous(expand = expansion(mult = .24))
27.8+7.3+0.5+3.3+42.3+8.8+10
